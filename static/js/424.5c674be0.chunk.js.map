{"version":3,"file":"static/js/424.5c674be0.chunk.js","mappings":"uTAIAA,EAAAA,EAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAU,mCAEHC,EAAuB,mCAAG,6GAEXF,EAAAA,EAAAA,IAAA,sCAAyCC,IAF9B,cAE3BE,EAF2B,yBAG1BA,EAAQC,KAAKC,SAHa,iCAKjCC,EAAAA,EAAAA,IAAM,mBAL2B,yDAAH,qDASvBC,EAAiB,mCAAG,WAAOC,GAAP,gGAEPR,EAAAA,EAAAA,IAAA,8BAAiCQ,EAAjC,oBAA+CP,IAFxC,cAEvBE,EAFuB,yBAGpBA,EAAQC,KAAKC,SAHO,iCAK3BC,EAAAA,EAAAA,IAAM,mBALqB,yDAAH,sDASjBG,EAAgB,mCAAG,WAAOD,GAAP,gGAENR,EAAAA,EAAAA,IAAA,gBAAmBQ,EAAnB,oBAAiCP,IAF3B,cAEtBE,EAFsB,yBAGnBA,EAAQC,MAHW,iCAK1BE,EAAAA,EAAAA,IAAM,kBALoB,yDAAH,sDAShBI,EAAoB,mCAAG,WAAOF,GAAP,gGAERR,EAAAA,EAAAA,IAAA,iBAAoBQ,EAApB,4BAA0CP,IAFlC,cAExBE,EAFwB,yBAGvBA,EAAQC,KAAKO,MAHU,iCAK9BL,EAAAA,EAAAA,IAAM,kBALwB,yDAAH,sDASpBM,EAAe,mCAAG,WAAOJ,GAAP,gGAEHR,EAAAA,EAAAA,IAAA,iBAAoBQ,EAApB,4BAA0CP,IAFvC,cAEnBE,EAFmB,yBAGlBA,EAAQC,KAAKC,SAHK,iCAKzBC,EAAAA,EAAAA,IAAM,kBALmB,yDAAH,qD,sJCvCfO,EAAe,WAC1B,OAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACMC,GAAWC,EAAAA,EAAAA,MAUjB,OARAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAQ,mCAAG,qGACWlB,EAAAA,EAAAA,MADX,OACTmB,EADS,OAEfL,EAAUK,GAFK,2CAAH,qDAIdD,GACD,GAAE,KAGD,+BACGL,QADH,IACGA,OADH,EACGA,EAAQO,KAAI,YAAoB,IAAjBd,EAAgB,EAAhBA,GAAIe,EAAY,EAAZA,MAClB,OACE,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAahB,GAAMiB,MAAO,CAACC,KAAMT,GAAzC,SAAsDM,KAD/Cf,EAIZ,KAGN,ECjBD,EARiB,WACf,OACE,+BACE,SAACK,EAAD,KAGL,C","sources":["Service/API.jsx","components/TrandingList/TrandingList.jsx","pages/HomePage.jsx"],"sourcesContent":["import axios from 'axios';\nimport { toast } from \"react-toastify\";\n\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'a78f00a7379230bfb7a39dfb77750ae2';\n\nexport const getTrandingMoviesPerDay = async () => {\n  try {\n      const promise = await axios.get(`/trending/movie/day?api_key=${API_KEY}`);\n      return promise.data.results\n  } catch (error) {\n      toast('Movie not found');\n  }\n};\n\nexport const searchMovieByName = async (id) => {\n  try {\n    const promise = await axios.get(`/search/movie?query=${id}&api_key=${API_KEY}`);\n      return promise.data.results\n  } catch (error) {\n      toast('Movie not found');\n  }\n};\n\nexport const getMovieFullInfo = async (id) => {\n  try {\n    const promise = await axios.get(`movie/${id}?api_key=${API_KEY}`);\n      return promise.data\n  } catch (error) {\n      toast('Sorry, no info');\n  }\n};\n\nexport const getMovieActorsDetail = async (id) => {\n  try {\n      const promise = await axios.get(`/movie/${id}/credits?api_key=${API_KEY}`);\n      return promise.data.cast\n  } catch (error) {\n      toast('Sorry, no info');\n  }\n};\n\nexport const getMovieReviews = async (id) => {\n  try {\n      const promise = await axios.get(`/movie/${id}/reviews?api_key=${API_KEY}`);\n      return promise.data.results\n  } catch (error) {\n      toast('Sorry, no info');\n  }\n};","import { Link, useLocation } from 'react-router-dom';\nimport { getTrandingMoviesPerDay } from '../../Service/API';\nimport { useEffect, useState } from 'react';\n\nexport const TrandingList = () => {\n  const [movies, setMovies] = useState([]);\n  const location = useLocation();\n  \n  useEffect(() => {\n    const awaiting = async () => {\n      const tradingList = await getTrandingMoviesPerDay();\n      setMovies(tradingList);\n    };\n    awaiting();\n  }, []);\n\n  return (\n    <ul>\n      {movies?.map(({ id, title }) => {\n        return (\n          <li key={id}>\n            <Link to={`/movies/${id}`} state={{from: location }}>{title}</Link>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n","import { TrandingList } from 'components/TrandingList/TrandingList';\n\nconst HomePage = () => {\n  return (\n    <>\n      <TrandingList />\n    </>\n  );\n};\n\nexport default HomePage;\n"],"names":["axios","API_KEY","getTrandingMoviesPerDay","promise","data","results","toast","searchMovieByName","id","getMovieFullInfo","getMovieActorsDetail","cast","getMovieReviews","TrandingList","useState","movies","setMovies","location","useLocation","useEffect","awaiting","tradingList","map","title","to","state","from"],"sourceRoot":""}
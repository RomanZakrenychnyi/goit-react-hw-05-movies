{"version":3,"file":"static/js/121.70b054b5.chunk.js","mappings":"uTAIAA,EAAAA,EAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAU,mCAEHC,EAAuB,mCAAG,6GAEXF,EAAAA,EAAAA,IAAA,sCAAyCC,IAF9B,cAE3BE,EAF2B,yBAG1BA,EAAQC,KAAKC,SAHa,iCAKjCC,EAAAA,EAAAA,IAAM,mBAL2B,yDAAH,qDASvBC,EAAiB,mCAAG,WAAOC,GAAP,gGAEPR,EAAAA,EAAAA,IAAA,8BAAiCQ,EAAjC,oBAA+CP,IAFxC,cAEvBE,EAFuB,yBAGpBA,EAAQC,KAAKC,SAHO,iCAK3BC,EAAAA,EAAAA,IAAM,mBALqB,yDAAH,sDASjBG,EAAgB,mCAAG,WAAOD,GAAP,gGAENR,EAAAA,EAAAA,IAAA,gBAAmBQ,EAAnB,oBAAiCP,IAF3B,cAEtBE,EAFsB,yBAGnBA,EAAQC,MAHW,iCAK1BE,EAAAA,EAAAA,IAAM,kBALoB,yDAAH,sDAShBI,EAAoB,mCAAG,WAAOF,GAAP,gGAERR,EAAAA,EAAAA,IAAA,iBAAoBQ,EAApB,4BAA0CP,IAFlC,cAExBE,EAFwB,yBAGvBA,EAAQC,KAAKO,MAHU,iCAK9BL,EAAAA,EAAAA,IAAM,kBALwB,yDAAH,sDASpBM,EAAe,mCAAG,WAAOJ,GAAP,gGAEHR,EAAAA,EAAAA,IAAA,iBAAoBQ,EAApB,4BAA0CP,IAFvC,cAEnBE,EAFmB,yBAGlBA,EAAQC,KAAKC,SAHK,iCAKzBC,EAAAA,EAAAA,IAAM,kBALmB,yDAAH,qD,qIC1C5B,EAA+B,kC,SCoC/B,EAhCoB,WAClB,OAA4BO,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAUR,OARAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAW,mCAAG,qGACMP,EAAAA,EAAAA,IAAgBI,GADtB,OACZI,EADY,OAElBL,EAAUK,GAFQ,2CAAH,qDAIjBD,GACD,GAAE,CAACH,KAGF,8BACGF,EAAOO,OAAS,EACfP,EAAOQ,KAAI,YAA8B,IAA3Bd,EAA0B,EAA1BA,GAAIe,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QACxB,OACE,2BACE,yBACE,oCAAYD,QAEd,eAAIE,UAAWC,EAAf,SAAoCF,MAJ7BhB,EAOZ,KAED,mEAIP,C","sources":["Service/API.jsx","webpack://react-homework-template/./src/components/MovieReview/MovieReview.module.css?ccdf","components/MovieReview/MovieReview.jsx"],"sourcesContent":["import axios from 'axios';\nimport { toast } from \"react-toastify\";\n\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'a78f00a7379230bfb7a39dfb77750ae2';\n\nexport const getTrandingMoviesPerDay = async () => {\n  try {\n      const promise = await axios.get(`/trending/movie/day?api_key=${API_KEY}`);\n      return promise.data.results\n  } catch (error) {\n      toast('Movie not found');\n  }\n};\n\nexport const searchMovieByName = async (id) => {\n  try {\n    const promise = await axios.get(`/search/movie?query=${id}&api_key=${API_KEY}`);\n      return promise.data.results\n  } catch (error) {\n      toast('Movie not found');\n  }\n};\n\nexport const getMovieFullInfo = async (id) => {\n  try {\n    const promise = await axios.get(`movie/${id}?api_key=${API_KEY}`);\n      return promise.data\n  } catch (error) {\n      toast('Sorry, no info');\n  }\n};\n\nexport const getMovieActorsDetail = async (id) => {\n  try {\n      const promise = await axios.get(`/movie/${id}/credits?api_key=${API_KEY}`);\n      return promise.data.cast\n  } catch (error) {\n      toast('Sorry, no info');\n  }\n};\n\nexport const getMovieReviews = async (id) => {\n  try {\n      const promise = await axios.get(`/movie/${id}/reviews?api_key=${API_KEY}`);\n      return promise.data.results\n  } catch (error) {\n      toast('Sorry, no info');\n  }\n};","// extracted by mini-css-extract-plugin\nexport default {\"descrElement\":\"MovieReview_descrElement__BiluN\"};","import { getMovieReviews } from 'Service/API';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport style from './MovieReview.module.css';\n\nconst MovieReview = () => {\n  const [review, setReview] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const actorsFetch = async () => {\n      const movieCast = await getMovieReviews(movieId);\n      setReview(movieCast);\n    };\n    actorsFetch();\n  }, [movieId]);\n\n  return (\n    <>\n      {review.length > 0 ? (\n        review.map(({ id, author, content }) => {\n          return (\n            <dl key={id}>\n              <dt>\n                <b>Author: {author}</b>\n              </dt>\n              <dd className={style.descrElement}>{content}</dd>\n            </dl>\n          );\n        })\n      ) : (\n        <p>We dont have any reviews for this film</p>\n      )}\n    </>\n  );\n};\n\nexport default MovieReview;"],"names":["axios","API_KEY","getTrandingMoviesPerDay","promise","data","results","toast","searchMovieByName","id","getMovieFullInfo","getMovieActorsDetail","cast","getMovieReviews","useState","review","setReview","movieId","useParams","useEffect","actorsFetch","movieCast","length","map","author","content","className","style"],"sourceRoot":""}
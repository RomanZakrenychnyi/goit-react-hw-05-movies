{"version":3,"file":"static/js/305.81cb6245.chunk.js","mappings":"uTAIAA,EAAAA,EAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAU,mCAEHC,EAAuB,mCAAG,6GAEXF,EAAAA,EAAAA,IAAA,sCAAyCC,IAF9B,cAE3BE,EAF2B,yBAG1BA,EAAQC,KAAKC,SAHa,iCAKjCC,EAAAA,EAAAA,IAAM,mBAL2B,yDAAH,qDASvBC,EAAiB,mCAAG,WAAOC,GAAP,gGAEPR,EAAAA,EAAAA,IAAA,8BAAiCQ,EAAjC,oBAA+CP,IAFxC,cAEvBE,EAFuB,yBAGpBA,EAAQC,KAAKC,SAHO,iCAK3BC,EAAAA,EAAAA,IAAM,mBALqB,yDAAH,sDASjBG,EAAgB,mCAAG,WAAOD,GAAP,gGAENR,EAAAA,EAAAA,IAAA,gBAAmBQ,EAAnB,oBAAiCP,IAF3B,cAEtBE,EAFsB,yBAGnBA,EAAQC,MAHW,iCAK1BE,EAAAA,EAAAA,IAAM,kBALoB,yDAAH,sDAShBI,EAAoB,mCAAG,WAAOF,GAAP,gGAERR,EAAAA,EAAAA,IAAA,iBAAoBQ,EAApB,4BAA0CP,IAFlC,cAExBE,EAFwB,yBAGvBA,EAAQC,KAAKO,MAHU,iCAK9BL,EAAAA,EAAAA,IAAM,kBALwB,yDAAH,sDASpBM,EAAe,mCAAG,WAAOJ,GAAP,gGAEHR,EAAAA,EAAAA,IAAA,iBAAoBQ,EAApB,4BAA0CP,IAFvC,cAEnBE,EAFmB,yBAGlBA,EAAQC,KAAKC,SAHK,iCAKzBC,EAAAA,EAAAA,IAAM,kBALmB,yDAAH,qD,6IC1C5B,EAAsB,uBAAtB,EAAyD,6BAAzD,EAA6F,wB,SCsD7F,EAlDkB,WAAO,IAAD,IACtB,GAA0BO,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAU,mCAAG,qGACOZ,EAAAA,EAAAA,IAAiBO,GADxB,OACXM,EADW,OAEjBP,EAASO,GAFQ,2CAAH,qDAIhBD,GACD,GAAE,CAACL,IAEJ,IAAMO,GAAgBC,EAAAA,EAAAA,QAAM,UAACN,EAASO,aAAV,aAAC,EAAgBC,MAErCC,EAAuDb,EAAvDa,MAAOC,EAAgDd,EAAhDc,YAAaC,EAAmCf,EAAnCe,SAAUC,EAAyBhB,EAAzBgB,OAAQC,EAAiBjB,EAAjBiB,aAC9C,OACE,iCACE,mBAAQC,UAAWC,EAAnB,UACE,SAAC,KAAD,CAAMC,GAAE,UAAEX,EAAcY,eAAhB,QAA2B,IAAnC,+BAEF,iBAAKH,UAAWC,EAAhB,WACE,0BACE,gBAAKG,IAAG,yCAAoCR,GAAeS,IAAI,QAEjE,4BACE,wBAAKV,KACL,wCAAgBW,KAAKC,MAAqB,GAAfR,GAA3B,QACA,sCACA,uBAAIF,KACJ,oCACA,8BAAIC,QAAJ,IAAIA,OAAJ,EAAIA,EAAQU,KAAI,SAAAC,GAAE,OAAIA,EAAGC,IAAP,aAGtB,iBAAKV,UAAWC,EAAhB,WACE,mDACA,2BACE,yBACE,SAAC,KAAD,CAAMC,GAAG,OAAT,qBAEF,yBACE,SAAC,KAAD,CAAMA,GAAG,UAAT,6BAIN,SAAC,KAAD,MAGL,C","sources":["Service/API.jsx","webpack://react-homework-template/./src/pages/MovieCard.module.css?b7f0","pages/MovieCard.jsx"],"sourcesContent":["import axios from 'axios';\nimport { toast } from \"react-toastify\";\n\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'a78f00a7379230bfb7a39dfb77750ae2';\n\nexport const getTrandingMoviesPerDay = async () => {\n  try {\n      const promise = await axios.get(`/trending/movie/day?api_key=${API_KEY}`);\n      return promise.data.results\n  } catch (error) {\n      toast('Movie not found');\n  }\n};\n\nexport const searchMovieByName = async (id) => {\n  try {\n    const promise = await axios.get(`/search/movie?query=${id}&api_key=${API_KEY}`);\n      return promise.data.results\n  } catch (error) {\n      toast('Movie not found');\n  }\n};\n\nexport const getMovieFullInfo = async (id) => {\n  try {\n    const promise = await axios.get(`movie/${id}?api_key=${API_KEY}`);\n      return promise.data\n  } catch (error) {\n      toast('Sorry, no info');\n  }\n};\n\nexport const getMovieActorsDetail = async (id) => {\n  try {\n      const promise = await axios.get(`/movie/${id}/credits?api_key=${API_KEY}`);\n      return promise.data.cast\n  } catch (error) {\n      toast('Sorry, no info');\n  }\n};\n\nexport const getMovieReviews = async (id) => {\n  try {\n      const promise = await axios.get(`/movie/${id}/reviews?api_key=${API_KEY}`);\n      return promise.data.results\n  } catch (error) {\n      toast('Sorry, no info');\n  }\n};","// extracted by mini-css-extract-plugin\nexport default {\"btn\":\"MovieCard_btn__aIaYc\",\"container\":\"MovieCard_container__MjFJd\",\"info\":\"MovieCard_info__PWsIF\"};","import { getMovieFullInfo } from 'Service/API';\nimport { useEffect, useRef, useState } from 'react';\nimport { Link, Outlet, useLocation, useParams } from 'react-router-dom';\nimport style from './MovieCard.module.css';\n\nconst MovieCard = () => {\n  const [movie, setMovie] = useState([]);\n  const { movieId } = useParams();\n  const location = useLocation();\n\n  useEffect(() => {\n    const movieFetch = async () => {\n      const movieInfo = await getMovieFullInfo(movieId);\n      setMovie(movieInfo);\n    };\n    movieFetch();\n  }, [movieId]);\n\n  const savedLocation = useRef(location.state?.from);\n\n  const { title, poster_path, overview, genres, vote_average } = movie;\n  return (\n    <>\n      <button className={style.btn}>\n        <Link to={savedLocation.current ?? '/'}>&larr; Go back</Link>\n      </button>\n      <div className={style.container}>\n        <div>\n          <img src={`https://image.tmdb.org/t/p/w500${poster_path}`} alt=\"\" />\n        </div>\n        <div>\n          <h1>{title}</h1>\n          <p>User Score: {Math.round(vote_average * 10)}%</p>\n          <h2>Overview</h2>\n          <p>{overview}</p>\n          <h3>Genres</h3>\n          <p>{genres?.map(el => el.name)}</p>\n        </div>\n      </div>\n      <div className={style.info}>\n        <p>Additional information</p>\n        <ul>\n          <li>\n            <Link to=\"cast\">Cast</Link>\n          </li>\n          <li>\n            <Link to=\"reviews\">Review</Link>\n          </li>\n        </ul>\n      </div>\n      <Outlet />\n    </>\n  );\n};\n\nexport default MovieCard;"],"names":["axios","API_KEY","getTrandingMoviesPerDay","promise","data","results","toast","searchMovieByName","id","getMovieFullInfo","getMovieActorsDetail","cast","getMovieReviews","useState","movie","setMovie","movieId","useParams","location","useLocation","useEffect","movieFetch","movieInfo","savedLocation","useRef","state","from","title","poster_path","overview","genres","vote_average","className","style","to","current","src","alt","Math","round","map","el","name"],"sourceRoot":""}
{"version":3,"file":"static/js/913.78b440e8.chunk.js","mappings":"uTAIAA,EAAAA,EAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAU,mCAEHC,EAAuB,mCAAG,6GAEXF,EAAAA,EAAAA,IAAA,sCAAyCC,IAF9B,cAE3BE,EAF2B,yBAG1BA,EAAQC,KAAKC,SAHa,iCAKjCC,EAAAA,EAAAA,IAAM,mBAL2B,yDAAH,qDASvBC,EAAiB,mCAAG,WAAOC,GAAP,gGAEPR,EAAAA,EAAAA,IAAA,8BAAiCQ,EAAjC,oBAA+CP,IAFxC,cAEvBE,EAFuB,yBAGpBA,EAAQC,KAAKC,SAHO,iCAK3BC,EAAAA,EAAAA,IAAM,mBALqB,yDAAH,sDASjBG,EAAgB,mCAAG,WAAOD,GAAP,gGAENR,EAAAA,EAAAA,IAAA,gBAAmBQ,EAAnB,oBAAiCP,IAF3B,cAEtBE,EAFsB,yBAGnBA,EAAQC,MAHW,iCAK1BE,EAAAA,EAAAA,IAAM,kBALoB,yDAAH,sDAShBI,EAAoB,mCAAG,WAAOF,GAAP,gGAERR,EAAAA,EAAAA,IAAA,iBAAoBQ,EAApB,4BAA0CP,IAFlC,cAExBE,EAFwB,yBAGvBA,EAAQC,KAAKO,MAHU,iCAK9BL,EAAAA,EAAAA,IAAM,kBALwB,yDAAH,sDASpBM,EAAe,mCAAG,WAAOJ,GAAP,gGAEHR,EAAAA,EAAAA,IAAA,iBAAoBQ,EAApB,4BAA0CP,IAFvC,cAEnBE,EAFmB,yBAGlBA,EAAQC,KAAKC,SAHK,iCAKzBC,EAAAA,EAAAA,IAAM,kBALmB,yDAAH,qD,qIC1C5B,EAA2B,4B,SCmC3B,EA/BkB,WAChB,OAA4BO,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAWR,OATAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAW,mCAAG,qGACMT,EAAAA,EAAAA,IAAqBM,GAD3B,OACZI,EADY,OAElBL,EAAUK,GAFQ,2CAAH,qDAIjBD,GACD,GAAE,CAACH,KAIF,wBACGF,EAAOO,KAAI,YAA4C,IAAzCC,EAAwC,EAAxCA,KAAMC,EAAkC,EAAlCA,UAAWC,EAAuB,EAAvBA,aAAchB,EAAS,EAATA,GAC5C,OACE,2BACE,gBAAKiB,UAAWC,EACdC,IAAG,yCAAoCH,GACvCI,IAAI,MAEN,uBAAIN,KACJ,uCAAeC,OANRf,EASZ,KAGN,C","sources":["Service/API.jsx","webpack://react-homework-template/./src/components/MovieCast/MovieCast.module.css?c01c","components/MovieCast/MovieCast.jsx"],"sourcesContent":["import axios from 'axios';\nimport { toast } from \"react-toastify\";\n\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'a78f00a7379230bfb7a39dfb77750ae2';\n\nexport const getTrandingMoviesPerDay = async () => {\n  try {\n      const promise = await axios.get(`/trending/movie/day?api_key=${API_KEY}`);\n      return promise.data.results\n  } catch (error) {\n      toast('Movie not found');\n  }\n};\n\nexport const searchMovieByName = async (id) => {\n  try {\n    const promise = await axios.get(`/search/movie?query=${id}&api_key=${API_KEY}`);\n      return promise.data.results\n  } catch (error) {\n      toast('Movie not found');\n  }\n};\n\nexport const getMovieFullInfo = async (id) => {\n  try {\n    const promise = await axios.get(`movie/${id}?api_key=${API_KEY}`);\n      return promise.data\n  } catch (error) {\n      toast('Sorry, no info');\n  }\n};\n\nexport const getMovieActorsDetail = async (id) => {\n  try {\n      const promise = await axios.get(`/movie/${id}/credits?api_key=${API_KEY}`);\n      return promise.data.cast\n  } catch (error) {\n      toast('Sorry, no info');\n  }\n};\n\nexport const getMovieReviews = async (id) => {\n  try {\n      const promise = await axios.get(`/movie/${id}/reviews?api_key=${API_KEY}`);\n      return promise.data.results\n  } catch (error) {\n      toast('Sorry, no info');\n  }\n};","// extracted by mini-css-extract-plugin\nexport default {\"imgActor\":\"MovieCast_imgActor__OMp6v\"};","import { getMovieActorsDetail } from 'Service/API';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport style from './MovieCast.module.css';\n\nconst MovieCast = () => {\n  const [actors, setActors] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const actorsFetch = async () => {\n      const movieCast = await getMovieActorsDetail(movieId);\n      setActors(movieCast);\n    };\n    actorsFetch();\n  }, [movieId]);\n\n\n  return (\n    <ul>\n      {actors.map(({ name, character, profile_path, id }) => {\n        return (\n          <li key={id}>\n            <img className={style.imgActor}\n              src={`https://image.tmdb.org/t/p/w500${profile_path}`}\n              alt=\"\"\n            />\n            <p>{name}</p>\n            <p>Character: {character}</p>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nexport default MovieCast;"],"names":["axios","API_KEY","getTrandingMoviesPerDay","promise","data","results","toast","searchMovieByName","id","getMovieFullInfo","getMovieActorsDetail","cast","getMovieReviews","useState","actors","setActors","movieId","useParams","useEffect","actorsFetch","movieCast","map","name","character","profile_path","className","style","src","alt"],"sourceRoot":""}
{"version":3,"file":"static/js/398.03bb126d.chunk.js","mappings":"uTAIAA,EAAAA,EAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAU,mCAEHC,EAAuB,mCAAG,6GAEXF,EAAAA,EAAAA,IAAA,sCAAyCC,IAF9B,cAE3BE,EAF2B,yBAG1BA,EAAQC,KAAKC,SAHa,iCAKjCC,EAAAA,EAAAA,IAAM,mBAL2B,yDAAH,qDASvBC,EAAiB,mCAAG,WAAOC,GAAP,gGAEPR,EAAAA,EAAAA,IAAA,8BAAiCQ,EAAjC,oBAA+CP,IAFxC,cAEvBE,EAFuB,yBAGpBA,EAAQC,KAAKC,SAHO,iCAK3BC,EAAAA,EAAAA,IAAM,mBALqB,yDAAH,sDASjBG,EAAgB,mCAAG,WAAOD,GAAP,gGAENR,EAAAA,EAAAA,IAAA,gBAAmBQ,EAAnB,oBAAiCP,IAF3B,cAEtBE,EAFsB,yBAGnBA,EAAQC,MAHW,iCAK1BE,EAAAA,EAAAA,IAAM,kBALoB,yDAAH,sDAShBI,EAAoB,mCAAG,WAAOF,GAAP,gGAERR,EAAAA,EAAAA,IAAA,iBAAoBQ,EAApB,4BAA0CP,IAFlC,cAExBE,EAFwB,yBAGvBA,EAAQC,KAAKO,MAHU,iCAK9BL,EAAAA,EAAAA,IAAM,kBALwB,yDAAH,sDASpBM,EAAe,mCAAG,WAAOJ,GAAP,gGAEHR,EAAAA,EAAAA,IAAA,iBAAoBQ,EAApB,4BAA0CP,IAFvC,cAEnBE,EAFmB,yBAGlBA,EAAQC,KAAKC,SAHK,iCAKzBC,EAAAA,EAAAA,IAAM,kBALmB,yDAAH,qD,4HC1C5B,EAAuB,0B,0BCIVO,EAAc,WACzB,OAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACMC,GAAWC,EAAAA,EAAAA,MACjB,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAQF,EAAaG,IAAI,UAE/BC,EAAAA,EAAAA,YAAU,WACR,GAAc,OAAVF,EAAgB,CAClB,IAAMG,EAAU,mCAAG,qGACIlB,EAAAA,EAAAA,IAAkBe,GADtB,OACXI,EADW,OAEjBV,EAAUU,GAFO,2CAAH,qDAIhBD,GACD,CAEF,GAAE,CAACH,EAAOF,IAEX,IAAMO,EAAiB,mCAAG,WAAMC,GAAN,gFACxBA,EAAMC,iBAEAC,EAAcF,EAAMG,OAAOC,SAASC,MAAMC,MAHxB,UAIH3B,EAAAA,EAAAA,IAAkBuB,GAJf,OAIlBJ,EAJkB,OAKxBL,EAAgB,CAAEC,MAAOQ,IACzBd,EAAUU,GACVE,EAAMG,OAAOC,SAASC,MAAMC,MAAQ,GAPZ,2CAAH,sDAUvB,OACE,iCACE,kBAAMC,UAAWC,EAAYC,OAAO,GAAGC,SAAUX,EAAjD,WACE,kBAAOY,KAAK,QAAQC,KAAK,UACzB,0CAEDzB,EAAO0B,OAAS,GACf,wBACG1B,EAAO2B,KAAI,gBAAGlC,EAAH,EAAGA,GAAImC,EAAP,EAAOA,MAAP,OACV,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAapC,GAAMqC,MAAO,CAAEC,KAAM7B,GAA1C,SACG0B,KAFInC,EADC,MASd,KAIP,EC3CD,EARkB,WAChB,OACE,+BACE,SAACK,EAAD,KAGL,C","sources":["Service/API.jsx","webpack://react-homework-template/./src/components/MovieSearch/MovieSearch.module.css?a4c9","components/MovieSearch/MovieSearch.jsx","pages/MoviePage.jsx"],"sourcesContent":["import axios from 'axios';\nimport { toast } from \"react-toastify\";\n\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'a78f00a7379230bfb7a39dfb77750ae2';\n\nexport const getTrandingMoviesPerDay = async () => {\n  try {\n      const promise = await axios.get(`/trending/movie/day?api_key=${API_KEY}`);\n      return promise.data.results\n  } catch (error) {\n      toast('Movie not found');\n  }\n};\n\nexport const searchMovieByName = async (id) => {\n  try {\n    const promise = await axios.get(`/search/movie?query=${id}&api_key=${API_KEY}`);\n      return promise.data.results\n  } catch (error) {\n      toast('Movie not found');\n  }\n};\n\nexport const getMovieFullInfo = async (id) => {\n  try {\n    const promise = await axios.get(`movie/${id}?api_key=${API_KEY}`);\n      return promise.data\n  } catch (error) {\n      toast('Sorry, no info');\n  }\n};\n\nexport const getMovieActorsDetail = async (id) => {\n  try {\n      const promise = await axios.get(`/movie/${id}/credits?api_key=${API_KEY}`);\n      return promise.data.cast\n  } catch (error) {\n      toast('Sorry, no info');\n  }\n};\n\nexport const getMovieReviews = async (id) => {\n  try {\n      const promise = await axios.get(`/movie/${id}/reviews?api_key=${API_KEY}`);\n      return promise.data.results\n  } catch (error) {\n      toast('Sorry, no info');\n  }\n};","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"MovieSearch_form__dggG5\"};","import { useEffect, useState } from 'react';\nimport { searchMovieByName } from '../../Service/API';\nimport style from './MovieSearch.module.css';\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\n\nexport const MovieSearch = () => {\n  const [movies, setMovies] = useState([]);\n  const location = useLocation();\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query');\n\n  useEffect(() => {\n    if (query !== null) {\n      const fetchQuery = async () => {\n        const result = await searchMovieByName(query);\n        setMovies(result);\n      }\n      fetchQuery();\n    }\n    return;\n  }, [query, searchParams])\n\n  const handleSearchFilms = async event => {\n    event.preventDefault();\n\n    const inputSearch = event.target.children.input.value;\n    const result = await searchMovieByName(inputSearch);\n    setSearchParams({ query: inputSearch });\n    setMovies(result);\n    event.target.children.input.value = '';\n  };\n\n  return (\n    <>\n      <form className={style.form} action=\"\" onSubmit={handleSearchFilms}>\n        <input name=\"input\" type=\"text\" />\n        <button>Search</button>\n      </form>\n      {movies.length > 0 ? (\n        <ul>\n          {movies.map(({ id, title }) => (\n            <li key={id}>\n              <Link to={`/movies/${id}`} state={{ from: location }}>\n                {title}\n              </Link>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        ''\n      )}\n    </>\n  );\n};\n","import { MovieSearch } from 'components/MovieSearch/MovieSearch';\n\nconst MoviePage = () => {\n  return (\n    <>\n      <MovieSearch />\n    </>\n  );\n};\n\nexport default MoviePage;"],"names":["axios","API_KEY","getTrandingMoviesPerDay","promise","data","results","toast","searchMovieByName","id","getMovieFullInfo","getMovieActorsDetail","cast","getMovieReviews","MovieSearch","useState","movies","setMovies","location","useLocation","useSearchParams","searchParams","setSearchParams","query","get","useEffect","fetchQuery","result","handleSearchFilms","event","preventDefault","inputSearch","target","children","input","value","className","style","action","onSubmit","name","type","length","map","title","to","state","from"],"sourceRoot":""}